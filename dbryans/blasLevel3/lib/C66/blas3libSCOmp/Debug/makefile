################################################################################
# Automatically-generated file. Do not edit!
################################################################################

SHELL = cmd.exe

CG_TOOL_ROOT := C:/Program Files (x86)/Texas Instruments/C6000 Code Generation Tools 7.4.0B2

ORDERED_OBJS += \
"./src/dataMove/dataMoveZtrsm.obj" \
"./src/dataMove/dataMoveZtrmm.obj" \
"./src/dataMove/dataMoveZsymm.obj" \
"./src/dataMove/dataMoveZhemm.obj" \
"./src/dataMove/dataMoveZgemm.obj" \
"./src/dataMove/dataMoveStrsm.obj" \
"./src/dataMove/dataMoveStrmm.obj" \
"./src/dataMove/dataMoveSsymm.obj" \
"./src/dataMove/dataMoveSgemm.obj" \
"./src/dataMove/dataMoveDtrsm.obj" \
"./src/dataMove/dataMoveDtrmm.obj" \
"./src/dataMove/dataMoveDsymm.obj" \
"./src/dataMove/dataMoveDgemm.obj" \
"./src/dataMove/dataMoveCtrsm.obj" \
"./src/dataMove/dataMoveCtrmm.obj" \
"./src/dataMove/dataMoveCsymm.obj" \
"./src/dataMove/dataMoveChemm.obj" \
"./src/dataMove/dataMoveCgemm.obj" \
"./src/kernels/ztrsmKernel.obj" \
"./src/kernels/zgemmKernel.obj" \
"./src/kernels/strsmKernel.obj" \
"./src/kernels/sgemmKernel.obj" \
"./src/kernels/dtrsmKernel.obj" \
"./src/kernels/dgemmKernel.obj" \
"./src/kernels/ctrsmKernel.obj" \
"./src/kernels/cgemmKernel.obj" \
"./src/xgemm/zgemmC66SC.obj" \
"./src/xgemm/sgemmC66SC.obj" \
"./src/xgemm/dgemmC66SC.obj" \
"./src/xgemm/cgemmC66SC.obj" \
"./src/xhemm/zhemmC66SC.obj" \
"./src/xhemm/chemmC66SC.obj" \
"./src/xher2k/zher2kC66SC.obj" \
"./src/xher2k/cher2kC66SC.obj" \
"./src/xherk/zherkC66SC.obj" \
"./src/xherk/cherkC66SC.obj" \
"./src/xsymm/zsymmC66SC.obj" \
"./src/xsymm/ssymmC66SC.obj" \
"./src/xsymm/dsymmC66SC.obj" \
"./src/xsymm/csymmC66SC.obj" \
"./src/xsyr2k/zsyr2kC66SC.obj" \
"./src/xsyr2k/ssyr2kC66SC.obj" \
"./src/xsyr2k/dsyr2kC66SC.obj" \
"./src/xsyr2k/csyr2kC66SC.obj" \
"./src/xsyrk/zsyrkC66SC.obj" \
"./src/xsyrk/ssyrkC66SC.obj" \
"./src/xsyrk/dsyrkC66SC.obj" \
"./src/xsyrk/csyrkC66SC.obj" \
"./src/xtrmm/ztrmmC66SC.obj" \
"./src/xtrmm/strmmC66SC.obj" \
"./src/xtrmm/dtrmmC66SC.obj" \
"./src/xtrmm/ctrmmC66SC.obj" \
"./src/xtrsm/ztrsmC66SC.obj" \
"./src/xtrsm/strsmC66SC.obj" \
"./src/xtrsm/dtrsmC66SC.obj" \
"./src/xtrsm/ctrsmC66SC.obj" \
"./util/touch.obj" \
"./util/memory.obj" \
"./util/edma.obj" \

-include ../makefile.init

RM := DEL /F
RMDIR := RMDIR /S/Q

# All of the sources participating in the build are defined here
-include sources.mk
-include subdir_vars.mk
-include util/subdir_vars.mk
-include src/xtrsm/subdir_vars.mk
-include src/xtrmm/subdir_vars.mk
-include src/xsyrk/subdir_vars.mk
-include src/xsyr2k/subdir_vars.mk
-include src/xsymm/subdir_vars.mk
-include src/xherk/subdir_vars.mk
-include src/xher2k/subdir_vars.mk
-include src/xhemm/subdir_vars.mk
-include src/xgemm/subdir_vars.mk
-include src/kernels/subdir_vars.mk
-include src/dataMove/subdir_vars.mk
-include subdir_rules.mk
-include util/subdir_rules.mk
-include src/xtrsm/subdir_rules.mk
-include src/xtrmm/subdir_rules.mk
-include src/xsyrk/subdir_rules.mk
-include src/xsyr2k/subdir_rules.mk
-include src/xsymm/subdir_rules.mk
-include src/xherk/subdir_rules.mk
-include src/xher2k/subdir_rules.mk
-include src/xhemm/subdir_rules.mk
-include src/xgemm/subdir_rules.mk
-include src/kernels/subdir_rules.mk
-include src/dataMove/subdir_rules.mk
-include objects.mk

ifneq ($(MAKECMDGOALS),clean)
ifneq ($(strip $(S_DEPS)),)
-include $(S_DEPS)
endif
ifneq ($(strip $(S_UPPER_DEPS)),)
-include $(S_UPPER_DEPS)
endif
ifneq ($(strip $(S62_DEPS)),)
-include $(S62_DEPS)
endif
ifneq ($(strip $(C64_DEPS)),)
-include $(C64_DEPS)
endif
ifneq ($(strip $(ASM_DEPS)),)
-include $(ASM_DEPS)
endif
ifneq ($(strip $(CC_DEPS)),)
-include $(CC_DEPS)
endif
ifneq ($(strip $(S55_DEPS)),)
-include $(S55_DEPS)
endif
ifneq ($(strip $(C67_DEPS)),)
-include $(C67_DEPS)
endif
ifneq ($(strip $(C??_DEPS)),)
-include $(C??_DEPS)
endif
ifneq ($(strip $(CLA_DEPS)),)
-include $(CLA_DEPS)
endif
ifneq ($(strip $(CPP_DEPS)),)
-include $(CPP_DEPS)
endif
ifneq ($(strip $(S??_DEPS)),)
-include $(S??_DEPS)
endif
ifneq ($(strip $(C_DEPS)),)
-include $(C_DEPS)
endif
ifneq ($(strip $(C62_DEPS)),)
-include $(C62_DEPS)
endif
ifneq ($(strip $(CXX_DEPS)),)
-include $(CXX_DEPS)
endif
ifneq ($(strip $(C++_DEPS)),)
-include $(C++_DEPS)
endif
ifneq ($(strip $(ASM_UPPER_DEPS)),)
-include $(ASM_UPPER_DEPS)
endif
ifneq ($(strip $(K_DEPS)),)
-include $(K_DEPS)
endif
ifneq ($(strip $(C43_DEPS)),)
-include $(C43_DEPS)
endif
ifneq ($(strip $(S67_DEPS)),)
-include $(S67_DEPS)
endif
ifneq ($(strip $(SA_DEPS)),)
-include $(SA_DEPS)
endif
ifneq ($(strip $(S43_DEPS)),)
-include $(S43_DEPS)
endif
ifneq ($(strip $(OPT_DEPS)),)
-include $(OPT_DEPS)
endif
ifneq ($(strip $(S64_DEPS)),)
-include $(S64_DEPS)
endif
ifneq ($(strip $(C_UPPER_DEPS)),)
-include $(C_UPPER_DEPS)
endif
ifneq ($(strip $(C55_DEPS)),)
-include $(C55_DEPS)
endif
endif

-include ../makefile.defs

# Add inputs and outputs from these tool invocations to the build variables 

# All Target
all: blas3libSCOmp.ae66

# Tool invocations
blas3libSCOmp.ae66: $(OBJS)
	@echo 'Building target: $@'
	@echo 'Invoking: C6000 Archiver'
	"C:/Program Files (x86)/Texas Instruments/C6000 Code Generation Tools 7.4.0B2/bin/ar6x" r "blas3libSCOmp.ae66" $(ORDERED_OBJS)
	@echo 'Finished building target: $@'
	@echo ' '

# Other Targets
clean:
	-$(RM) $(GEN_SRCS__QUOTED)$(GEN_MISC_FILES__QUOTED)$(GEN_OPTS__QUOTED)$(GEN_CMDS__QUOTED)$(C6000_LIBRARY_OUTPUTS__QUOTED) "blas3libSCOmp.ae66"
	-$(RMDIR) $(GEN_MISC_DIRS__QUOTED)
	-$(RM) "util\edma.pp" "util\memory.pp" "src\xtrsm\ctrsmC66SC.pp" "src\xtrsm\dtrsmC66SC.pp" "src\xtrsm\strsmC66SC.pp" "src\xtrsm\ztrsmC66SC.pp" "src\xtrmm\ctrmmC66SC.pp" "src\xtrmm\dtrmmC66SC.pp" "src\xtrmm\strmmC66SC.pp" "src\xtrmm\ztrmmC66SC.pp" "src\xsyrk\csyrkC66SC.pp" "src\xsyrk\dsyrkC66SC.pp" "src\xsyrk\ssyrkC66SC.pp" "src\xsyrk\zsyrkC66SC.pp" "src\xsyr2k\csyr2kC66SC.pp" "src\xsyr2k\dsyr2kC66SC.pp" "src\xsyr2k\ssyr2kC66SC.pp" "src\xsyr2k\zsyr2kC66SC.pp" "src\xsymm\csymmC66SC.pp" "src\xsymm\dsymmC66SC.pp" "src\xsymm\ssymmC66SC.pp" "src\xsymm\zsymmC66SC.pp" "src\xherk\cherkC66SC.pp" "src\xherk\zherkC66SC.pp" "src\xher2k\cher2kC66SC.pp" "src\xher2k\zher2kC66SC.pp" "src\xhemm\chemmC66SC.pp" "src\xhemm\zhemmC66SC.pp" "src\xgemm\cgemmC66SC.pp" "src\xgemm\dgemmC66SC.pp" "src\xgemm\sgemmC66SC.pp" "src\xgemm\zgemmC66SC.pp" "src\kernels\cgemmKernel.pp" "src\kernels\ctrsmKernel.pp" "src\kernels\dgemmKernel.pp" "src\kernels\dtrsmKernel.pp" "src\kernels\sgemmKernel.pp" "src\kernels\strsmKernel.pp" "src\kernels\zgemmKernel.pp" 
	-$(RM) "src\kernels\ztrsmKernel.pp" "src\dataMove\dataMoveCgemm.pp" "src\dataMove\dataMoveChemm.pp" "src\dataMove\dataMoveCsymm.pp" "src\dataMove\dataMoveCtrmm.pp" "src\dataMove\dataMoveCtrsm.pp" "src\dataMove\dataMoveDgemm.pp" "src\dataMove\dataMoveDsymm.pp" "src\dataMove\dataMoveDtrmm.pp" "src\dataMove\dataMoveDtrsm.pp" "src\dataMove\dataMoveSgemm.pp" "src\dataMove\dataMoveSsymm.pp" "src\dataMove\dataMoveStrmm.pp" "src\dataMove\dataMoveStrsm.pp" "src\dataMove\dataMoveZgemm.pp" "src\dataMove\dataMoveZhemm.pp" "src\dataMove\dataMoveZsymm.pp" "src\dataMove\dataMoveZtrmm.pp" "src\dataMove\dataMoveZtrsm.pp" 
	-$(RM) "util\edma.obj" "util\memory.obj" "util\touch.obj" "src\xtrsm\ctrsmC66SC.obj" "src\xtrsm\dtrsmC66SC.obj" "src\xtrsm\strsmC66SC.obj" "src\xtrsm\ztrsmC66SC.obj" "src\xtrmm\ctrmmC66SC.obj" "src\xtrmm\dtrmmC66SC.obj" "src\xtrmm\strmmC66SC.obj" "src\xtrmm\ztrmmC66SC.obj" "src\xsyrk\csyrkC66SC.obj" "src\xsyrk\dsyrkC66SC.obj" "src\xsyrk\ssyrkC66SC.obj" "src\xsyrk\zsyrkC66SC.obj" "src\xsyr2k\csyr2kC66SC.obj" "src\xsyr2k\dsyr2kC66SC.obj" "src\xsyr2k\ssyr2kC66SC.obj" "src\xsyr2k\zsyr2kC66SC.obj" "src\xsymm\csymmC66SC.obj" "src\xsymm\dsymmC66SC.obj" "src\xsymm\ssymmC66SC.obj" "src\xsymm\zsymmC66SC.obj" "src\xherk\cherkC66SC.obj" "src\xherk\zherkC66SC.obj" "src\xher2k\cher2kC66SC.obj" "src\xher2k\zher2kC66SC.obj" "src\xhemm\chemmC66SC.obj" "src\xhemm\zhemmC66SC.obj" "src\xgemm\cgemmC66SC.obj" "src\xgemm\dgemmC66SC.obj" "src\xgemm\sgemmC66SC.obj" "src\xgemm\zgemmC66SC.obj" "src\kernels\cgemmKernel.obj" "src\kernels\ctrsmKernel.obj" "src\kernels\dgemmKernel.obj" "src\kernels\dtrsmKernel.obj" "src\kernels\sgemmKernel.obj" 
	-$(RM) "src\kernels\strsmKernel.obj" "src\kernels\zgemmKernel.obj" "src\kernels\ztrsmKernel.obj" "src\dataMove\dataMoveCgemm.obj" "src\dataMove\dataMoveChemm.obj" "src\dataMove\dataMoveCsymm.obj" "src\dataMove\dataMoveCtrmm.obj" "src\dataMove\dataMoveCtrsm.obj" "src\dataMove\dataMoveDgemm.obj" "src\dataMove\dataMoveDsymm.obj" "src\dataMove\dataMoveDtrmm.obj" "src\dataMove\dataMoveDtrsm.obj" "src\dataMove\dataMoveSgemm.obj" "src\dataMove\dataMoveSsymm.obj" "src\dataMove\dataMoveStrmm.obj" "src\dataMove\dataMoveStrsm.obj" "src\dataMove\dataMoveZgemm.obj" "src\dataMove\dataMoveZhemm.obj" "src\dataMove\dataMoveZsymm.obj" "src\dataMove\dataMoveZtrmm.obj" "src\dataMove\dataMoveZtrsm.obj" 
	-$(RM) "util\touch.pp" 
	-@echo 'Finished clean'
	-@echo ' '

.PHONY: all clean dependents
.SECONDARY:

-include ../makefile.targets
