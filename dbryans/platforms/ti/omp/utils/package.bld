/*
 * Copyright (c) 2012, Texas Instruments Incorporated
 * http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * --/COPYRIGHT--*/
/*
 *  ======== package.bld ========
 */

var commonBld = xdc.loadCapsule("ti/sysbios/build/common.bld");

var objList = [
    "ThreadLocal",
    "SemaphoreMP",
    "OpenMP",
    "ThreadLocalStorage",
    "HeapOMP",
    "tls_get_tp.asm",
    
];

var trgFilter_66 = {
        field: "isa",
        list: [ "66" ]
};


arguments=["profile=release,debug"];

/* generate makefiles */
commonBld.buildLibs(objList, undefined, null, arguments);

buildautodnld(["OpenMPDnldCore.c"], undefined, trgFilter_66, arguments);

Pkg.otherFiles = [ "package.bld", "device_C6678.h", "device_C6670.h" ];

/* Include the header files in ti/omp */
Pkg.attrs.incs= "-I ../config/sysbios";

/* include source files in the release package */
Pkg.attrs.exportSrc = true;
Pkg.attrs.exportCfg = true;

Pkg.generatedFiles.$add("lib/");

function buildautodnld(objList, relList, filter, xdcArgs)
{
    for (var i = 0; i < Build.targets.length; i++) {
        var targ = Build.targets[i];

        /* skip target if not supported */
        if (!commonBld.supportsTarget(targ, filter)) {
            continue;
        }

		

        var profiles = commonBld.getProfiles(xdcArgs);

        /* If no profiles were assigned, use only the default one. */
        if (profiles.length == 0) {
            profiles[0] = "debug";
        }


        for (var j = 0; j < profiles.length; j++) {
            var profile = profiles[j];
            var lib_c6678 = Pkg.addLibrary('lib/' + profile + '/' + Pkg.name+".C6678",
                        targ, {
                            profile: profile,
                            releases: relList,
							defs: " -DDEVICE=6678"
                        });
            lib_c6678.addObjects(objList);
			var lib_C6670 = Pkg.addLibrary('lib/' + profile + '/' + Pkg.name+".C6670",
                        targ, {
                            profile: profile,
                            releases: relList,
							defs: " -DDEVICE=6670"
                        });
            lib_C6670.addObjects(objList);
        }
    }
}
